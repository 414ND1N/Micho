const {EmbedBuilder} = require('discord.js');
const { ActionRowBuilder, ButtonBuilder, ButtonStyle} = require('discord.js');
module.exports = {
    ALIASES: ["ayuda"],
    DESCRIPTION: "Sirve para ver los comandos disponibles",
    async execute(client, message, args, prefix){
        try{
            let btn_menu = new ButtonBuilder()
                .setCustomId('menu')
                .setLabel('Men√∫')
                .setStyle(ButtonStyle.Success)
                .setEmoji(`üè†`);
            
            let btn_info =  new ButtonBuilder()
                .setCustomId('info')
                .setLabel('Info')
                .setStyle(ButtonStyle.Primary)
                .setEmoji(`<:facts:1061057414876639292>`);

            let btn_music =  new ButtonBuilder()
                .setCustomId('music')
                .setLabel('M√∫sica')
                .setStyle(ButtonStyle.Primary)
                .setEmoji(`<:rolas:1051012560054407219>`);

            let btn_var =  new ButtonBuilder()
                .setCustomId('var')
                .setLabel('Variedad')
                .setStyle(ButtonStyle.Primary)
                .setEmoji(`<:sus:1061064541179486218>`);

            let btn_salir =  new ButtonBuilder()
                .setCustomId('exit')
                .setLabel('‚ùå Salir')
                .setStyle(ButtonStyle.Danger);

            const row = new ActionRowBuilder().addComponents(btn_menu,btn_info,btn_music,btn_var,btn_salir);    

            const embed_menu = new EmbedBuilder()
                .setTitle('Men√∫')
                .setDescription(`Los comandos compatibles con **Toffu**, tanto con \`/\` o con \`tf.\``)
                .setColor(process.env.COLOR)
                .addFields(
                    {name: `\`Informaci√≥n\``, value: `Comandos que brindan informaci√≥n del bot y/o servidor.`},
                    {name: `\`M√∫sica\``, value: `Comandos para reproducir m√∫sica en el canal de voz que te encuentres conectado.`},
                    {name: `\`Variedad\``, value: `Comandos para funci√≥nes miscelaneo.`}
                ) 
                .setThumbnail("https://i.imgur.com/xbzkVJh.gif");

            const embed_menu1 = new EmbedBuilder()
                .setTitle('Informaci√≥n')
                .setDescription(`Comandos que brindan informaci√≥n del bot y/o servidor`)
                .setColor(`#3a7c21`)
                .addFields(
                    {name: `help`, value:`Sirve para ver el men√∫ de ayuda con los comandos.`},
                    {name: `ping`, value:`Sirve para ver el ping en ms de \`Toffu\`.`},
                    {name: `pagina`, value:`Muestra el link de la pana p√°gina.`},
                    {name: `codigo`, value:`Muestra el link del repositorio con el c√≥digo de \`Toffu\`.`}
                )  
                .setThumbnail(`https://i.imgur.com/Ud2cXN5.jpg`);
    
            const embed_menu2 = new EmbedBuilder()
                .setTitle('M√∫sica')
                .setDescription(`Comandos para reproducir m√∫sica en el canal de voz en el que te encuentres conectado`)
                .setColor(`#c72a2a`)
                .addFields(
                    {name: `djpanas`, value:`Sirve para reproducir DJPANAS.\n> Se puede elegir entre las distintas variaciones.`},
                    {name: `**SUBCOMANDOS**`, value:`Estos comandos son subcomandos del comando principal \`music\`.`},
                    {name: `‚ñ™  play`, value:`Sirve para reproducir una canci√≥n dada (link o nombre).\n
                        > Admite links de \`YouTube\`, \`Spotify\` y \`Soundcloud\`.`},
                    {name: `‚ñ™  stop`, value:`Detiene la reproducci√≥n de la canci√≥n actual.`},
                    {name: `‚ñ™  control`, value:`Entre las acciones que cuenta estan: \n
                        > \`Resumir\`, \`Pausar\`, \`Siguiente\`, \`Anterior\`, \`Mezclar\`.`},
                    {name: `‚ñ™  volumen`, value:`Sirve para indicar el volumen de la canci√≥n.\n
                        > Admite de \`0%\` a \`200%\`.`},
                    {name: `‚ñ™  lista`, value:`Sirve para ver la lista de canciones.\n
                        > Muestra un men√∫ con botones de navegaci√≥n.`},
                    {name: `‚ñ™  nowplaying`, value:`Muestra la duraci√≥n que esta en reproducci√≥n`},
                    {name: `‚ñ™  saltar`, value:`Sirve para saltar a una canci√≥n de la lista en reproducci√≥n.\n
                        > El n√∫mero de canci√≥n se puede ver en la queue.`},
                    {name: `‚ñ™  repetir`, value:`Sirve para cambiar el modo de repetici√≥n de la m√∫sica en reproducci√≥n.\n
                        > Puede ser \`desactivado\`, \`canci√≥n actual\`, \`lista completa\`.`}
                )  
                .setThumbnail(`https://i.imgur.com/GLPfwSa.jpg`);
    
            const embed_menu3 = new EmbedBuilder()
                .setTitle('Variedad')
                .setDescription(`Comandos para funci√≥nes miscelaneo`)
                .setColor(`#0c6bc2`)
                .addFields(
                    {name: `8ball`, value:`Sirve para que la bola 8 de una respuesta a una pregunta.`},
                    {name: `accion`, value:`Sirve para hacer una acci√≥n a otro usuario.\n
                    > Entre las acciones esta \`saludar\`, \`felicitar\`, \`sorprender\`, \`abrazar\`, \`besar\`, \`golpear\`, \`dar palmadas\`, \`mirar fijamente\`, \`bofetear\`, \`dar toques\`, \`presumir\`, \`lamer\`, \`pulgar arriba\`, \`berrinche\`, \`sonrojar\`.\n
                    _Puedes indicar que tipo de imagen buscar_.`},
                    {name: `buscaminas`, value:`Sirve para jugar al buscaminas.
                        > Se indica el n√∫mero de \`columnas\`, \`filas\` y la \`dificultad\` (en ese orden üòä).`},
                    {name: `decir`, value:`Sirve para que Toffu diga el texto dado.`},
                    {name: `elegir`, value:`Sirve para que Toffu eliga entre las opciones dadas.\n
                        > Las opciones se dan separadas por coma \`,\`.`},
                    {name: `gif`, value:`Sirve para mostrar el gif que se desee buscar.\n
                        > Mostrara un gif aleatorio de \`tenor.com\`.`},
                    {name: `pokedex`, value:`Sirve para mostrar informaci√≥n de un pokem√≥n seg√∫n su id\n
                        > Disponible desde el pokem√≥n \`1\` al \`1010\`.`},
                    {name: `pregunta`, value:`Sirve para realizar una pregunta.`},
                    {name: `sugerir`, value:`Sirve para dar una sugerencia al canal de sugerencias.`},   
                )
                .setThumbnail(`https://i.imgur.com/s2lV0y5.png`);

            let embed_help = await message.channel.send({
                content: `**Navega con los _botones_ en el men√∫**`,
                embeds: [embed_menu],
                components: [row]
            });

            const collector = embed_help.createMessageComponentCollector({time: 60e3});  
            
            collector.on("collect", async (i) => {
                if(i?.user.id != message.author.id){
                    return await i.reply({content: `‚ùå Solo quien uso el comando de queue puede navegar entre p√°ginas`});
                }
                switch (i?.customId){
                    case 'menu':{
                        collector.resetTimer();
                        await i.update({embeds: [embed_menu], components:[row]})
                    }
                        break;
                    case 'info':{
                        collector.resetTimer();
                        await i.update({embeds: [embed_menu1], components:[row]})
                    }
                        break;
                    case 'music':{
                        collector.resetTimer();
                        await i.update({embeds: [embed_menu2], components:[row]})
                    }
                        break;
                    case 'var':{
                        collector.resetTimer();
                        await i.update({embeds: [embed_menu3], components:[row]})
                    }
                        break;
                    case 'exit':{
                        collector.stop();
                    }
                        break;
                    default:
                        break;
                }
            });
            collector.on("end", () => {
                //desactivamos botones y editamos el mensaje
                embed_help.edit({content: "El tiempo ha expirado ‚è≥, utiliza denuevo el comando help  üòä", components:[]}).catch(() => {});
                embed_help.suppressEmbeds(true);
            });

        }catch(e){
            message.reply({content: `**Ha ocurrido un error con help**`});
            return console.log(e);
        }
    }
}